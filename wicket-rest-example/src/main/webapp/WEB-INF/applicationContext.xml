<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Sample RDBMS data source that would exist in any application.  Sample is just using an in-memory HSQLDB
         instance.  Change to your application's settings for a real app. -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:mem:wicket-rest-example"/>
        <property name="username" value="sa"/>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
         <property name="schemaUpdate" value="true"/>
        <!-- Scan packages for JPA annotations -->
        <property name="packagesToScan" value="org.innobuilt.wicket.rest.example.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.jdbc.fetch_size">100</prop>
	            <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
        	</props>
        </property>
    </bean>

    <!-- Transaction support beans -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven/>

	<!-- PersonDAO -->
	<bean id="personDAO" class="org.innobuilt.wicket.rest.example.dao.HibernatePersonDAO">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- PersonService -->
	<bean id="personService" class="org.innobuilt.wicket.rest.example.service.DefaultPersonService">
		<property name="personDAO" ref="personDAO"/>
	</bean>
	
	<!-- WicketApplication -->
	<bean id="wicketApplication" class="org.innobuilt.wicket.rest.example.WicketRestApplication">
		<property name="personService" ref="personService"/>
	</bean>
	
	<!-- BootstrapDataPopulator -->
	<bean id="BootstrapDataPopulator" class="org.innobuilt.wicket.rest.example.dao.BootstrapDataPopulator">
		<property name="personService" ref="personService"/>
	</bean>
	
	
</beans>